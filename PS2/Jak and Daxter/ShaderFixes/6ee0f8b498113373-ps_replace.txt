//J&D: shadows.
// ---- Created with 3Dmigoto v1.2.50 on Sat Dec 17 19:08:51 2016

cbuffer cb1 : register(b0)
{
  float3 FogColor : packoffset(c0);
  float AREF : packoffset(c0.w);
  float4 HalfTexel : packoffset(c1);
  float4 WH : packoffset(c2);
  float4 MinMax : packoffset(c3);
  float2 MinF : packoffset(c4);
  float2 TA : packoffset(c4.z);
  uint4 MskFix : packoffset(c5);
  float4 TC_OffsetHack : packoffset(c6);
}

SamplerState TextureSampler_s : register(s0);
Texture2D<float4> Texture : register(t0);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : COLOR0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;
discard;
  r0.xyzw = v1.xyxy / v1.wwww;
  r0.xyzw = HalfTexel.xyzw + r0.xyzw;
  r1.xyzw = max(MinMax.xyxy, r0.xyzw);
  r0.xy = WH.zw * r0.xy;
  r0.xy = frac(r0.xy);
  r1.xyzw = min(MinMax.zwzw, r1.xyzw);
  r2.xyzw = WH.zwzw * r1.xwzw;
  r1.xyzw = WH.zwzw * r1.xyzy;
  r1.xyzw = trunc(r1.xyzw);
  r1.xyzw = float4(0.5,0.5,0.5,0.5) + r1.xyzw;
  r1.xyzw = r1.xyzw / WH.zwzw;
  r2.xyzw = trunc(r2.xyzw);
  r2.xyzw = float4(0.5,0.5,0.5,0.5) + r2.xyzw;
  r2.xyzw = r2.xyzw / WH.zwzw;
  r3.xyzw = Texture.Sample(TextureSampler_s, r2.zw).xyzw;
  r2.xyzw = Texture.Sample(TextureSampler_s, r2.xy).xyzw;
  r3.xyzw = r3.xyzw + -r2.xyzw;
  r2.xyzw = r0.xxxx * r3.xyzw + r2.xyzw;
  r3.xyzw = Texture.Sample(TextureSampler_s, r1.zw).xyzw;
  r1.xyzw = Texture.Sample(TextureSampler_s, r1.xy).xyzw;
  r3.xyzw = r3.xyzw + -r1.xyzw;
  r1.xyzw = r0.xxxx * r3.xyzw + r1.xyzw;
  r2.xyzw = r2.xyzw + -r1.xyzw;
  r0.xyzw = r0.yyyy * r2.xyzw + r1.xyzw;
  r0.xyzw = v2.xyzw * r0.xyzw;
  r0.xyzw = saturate(float4(1.9921875,1.9921875,1.9921875,1.9921875) * r0.xyzw);
  o0.xyzw = r0.xyzw;
  o1.xyzw = r0.wwww + r0.wwww;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.50 on Sat Dec 17 19:08:51 2016
//
//
// Buffer Definitions: 
//
// cbuffer cb1
// {
//
//   float3 FogColor;                   // Offset:    0 Size:    12 [unused]
//   float AREF;                        // Offset:   12 Size:     4 [unused]
//   float4 HalfTexel;                  // Offset:   16 Size:    16
//   float4 WH;                         // Offset:   32 Size:    16
//   float4 MinMax;                     // Offset:   48 Size:    16
//   float2 MinF;                       // Offset:   64 Size:     8 [unused]
//   float2 TA;                         // Offset:   72 Size:     8 [unused]
//   uint4 MskFix;                      // Offset:   80 Size:    16 [unused]
//   float4 TC_OffsetHack;              // Offset:   96 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// TextureSampler                    sampler      NA          NA    0        1
// Texture                           texture  float4          2d    0        1
// cb1                               cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 4
div r0.xyzw, v1.xyxy, v1.wwww
add r0.xyzw, r0.xyzw, cb0[1].xyzw
max r1.xyzw, r0.xyzw, cb0[3].xyxy
mul r0.xy, r0.xyxx, cb0[2].zwzz
frc r0.xy, r0.xyxx
min r1.xyzw, r1.xyzw, cb0[3].zwzw
mul r2.xyzw, r1.xwzw, cb0[2].zwzw
mul r1.xyzw, r1.xyzy, cb0[2].zwzw
round_z r1.xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
div r1.xyzw, r1.xyzw, cb0[2].zwzw
round_z r2.xyzw, r2.xyzw
add r2.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
div r2.xyzw, r2.xyzw, cb0[2].zwzw
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s0
add r3.xyzw, -r2.xyzw, r3.xyzw
mad r2.xyzw, r0.xxxx, r3.xyzw, r2.xyzw
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t0.xyzw, s0
add r3.xyzw, -r1.xyzw, r3.xyzw
mad r1.xyzw, r0.xxxx, r3.xyzw, r1.xyzw
add r2.xyzw, -r1.xyzw, r2.xyzw
mad r0.xyzw, r0.yyyy, r2.xyzw, r1.xyzw
mul r0.xyzw, r0.xyzw, v2.xyzw
mul_sat r0.xyzw, r0.xyzw, l(1.99218750, 1.99218750, 1.99218750, 1.99218750)
mov o0.xyzw, r0.xyzw
add o1.xyzw, r0.wwww, r0.wwww
ret 
// Approximately 29 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
