//Meteor: bloom (TC offset enabled).
// ---- Created with 3Dmigoto v1.2.50 on Sat Dec 17 16:27:36 2016

cbuffer cb1 : register(b0)
{
  float3 FogColor : packoffset(c0);
  float AREF : packoffset(c0.w);
  float4 HalfTexel : packoffset(c1);
  float4 WH : packoffset(c2);
  float4 MinMax : packoffset(c3);
  float2 MinF : packoffset(c4);
  float2 TA : packoffset(c4.z);
  uint4 MskFix : packoffset(c5);
  float4 TC_OffsetHack : packoffset(c6);
}

SamplerState TextureSampler_s : register(s0);
SamplerState PaletteSampler_s : register(s1);
Texture2D<float4> Texture : register(t0);
Texture2D<float4> Palette : register(t1);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : COLOR0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = TC_OffsetHack.xyxy + v1.xyxy;
  r0.xyzw = HalfTexel.xyzw + r0.xyzw;
  r1.xyzw = WH.zwzw * r0.xwzw;
  r0.xyzw = WH.zwzw * r0.xyzy;
  r1.xyzw = trunc(r1.xyzw);
  r1.xyzw = float4(0.5,0.5,0.5,0.5) + r1.xyzw;
  r1.xyzw = r1.xyzw / WH.zwzw;
  r2.z = Texture.Sample(TextureSampler_s, r1.xy).w;
  r2.w = Texture.Sample(TextureSampler_s, r1.zw).w;
  r1.xyzw = trunc(r0.xyzw);
  r0.xy = frac(r0.xy);
  r1.xyzw = float4(0.5,0.5,0.5,0.5) + r1.xyzw;
  r1.xyzw = r1.xyzw / WH.zwzw;
  r2.x = Texture.Sample(TextureSampler_s, r1.xy).w;
  r2.y = Texture.Sample(TextureSampler_s, r1.zw).w;
  r1.xyzw = r2.xyzw * float4(0.99609375,0.99609375,0.99609375,0.99609375) + float4(0.001953125,0.001953125,0.001953125,0.001953125);
  r2.xyzw = Palette.Sample(PaletteSampler_s, r1.ww).xyzw;
  r3.xyzw = Palette.Sample(PaletteSampler_s, r1.zz).xyzw;
  r2.xyzw = -r3.xyzw + r2.xyzw;
  r2.xyzw = r0.xxxx * r2.xyzw + r3.xyzw;
  r3.xyzw = Palette.Sample(PaletteSampler_s, r1.yy).xyzw;
  r1.xyzw = Palette.Sample(PaletteSampler_s, r1.xx).xyzw;
  r3.xyzw = r3.xyzw + -r1.xyzw;
  r1.xyzw = r0.xxxx * r3.xyzw + r1.xyzw;
  r2.xyzw = r2.xyzw + -r1.xyzw;
  //Multiply by iniparams.z to correct.
  float4 iniparams = IniParams.Load(0);
  r0.xyzw = saturate(r0.yyyy * r2.xyzw + r1.xyzw)*iniparams.z;
  o0.xyzw = r0.xyzw;
  o1.xyzw = r0.wwww + r0.wwww;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.50 on Sat Dec 17 16:27:36 2016
//
//
// Buffer Definitions: 
//
// cbuffer cb1
// {
//
//   float3 FogColor;                   // Offset:    0 Size:    12 [unused]
//   float AREF;                        // Offset:   12 Size:     4 [unused]
//   float4 HalfTexel;                  // Offset:   16 Size:    16
//   float4 WH;                         // Offset:   32 Size:    16
//   float4 MinMax;                     // Offset:   48 Size:    16 [unused]
//   float2 MinF;                       // Offset:   64 Size:     8 [unused]
//   float2 TA;                         // Offset:   72 Size:     8 [unused]
//   uint4 MskFix;                      // Offset:   80 Size:    16 [unused]
//   float4 TC_OffsetHack;              // Offset:   96 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// TextureSampler                    sampler      NA          NA    0        1
// PaletteSampler                    sampler      NA          NA    1        1
// Texture                           texture  float4          2d    0        1
// Palette                           texture  float4          2d    1        1
// cb1                               cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 4
add r0.xyzw, v1.xyxy, cb0[6].xyxy
add r0.xyzw, r0.xyzw, cb0[1].xyzw
mul r1.xyzw, r0.xwzw, cb0[2].zwzw
mul r0.xyzw, r0.xyzy, cb0[2].zwzw
round_z r1.xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
div r1.xyzw, r1.xyzw, cb0[2].zwzw
sample_indexable(texture2d)(float,float,float,float) r2.z, r1.xyxx, t0.xywz, s0
sample_indexable(texture2d)(float,float,float,float) r2.w, r1.zwzz, t0.xyzw, s0
round_z r1.xyzw, r0.xyzw
frc r0.xy, r0.xyxx
add r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
div r1.xyzw, r1.xyzw, cb0[2].zwzw
sample_indexable(texture2d)(float,float,float,float) r2.x, r1.xyxx, t0.wxyz, s0
sample_indexable(texture2d)(float,float,float,float) r2.y, r1.zwzz, t0.xwyz, s0
mad r1.xyzw, r2.xyzw, l(0.996093750, 0.996093750, 0.996093750, 0.996093750), l(0.00195312500, 0.00195312500, 0.00195312500, 0.00195312500)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.wwww, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.zzzz, t1.xyzw, s1
add r2.xyzw, r2.xyzw, -r3.xyzw
mad r2.xyzw, r0.xxxx, r2.xyzw, r3.xyzw
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.yyyy, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xxxx, t1.xyzw, s1
add r3.xyzw, -r1.xyzw, r3.xyzw
mad r1.xyzw, r0.xxxx, r3.xyzw, r1.xyzw
add r2.xyzw, -r1.xyzw, r2.xyzw
mad_sat r0.xyzw, r0.yyyy, r2.xyzw, r1.xyzw
mov o0.xyzw, r0.xyzw
add o1.xyzw, r0.wwww, r0.wwww
ret 
// Approximately 29 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
